{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentUser: null,\n  loading: false,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      // return initialState\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(state.currentUser.subscribedUsers.findIndex(channelId => channelId === action.payload), 1);\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailure,\n  loginSuccess,\n  logout,\n  subscription\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","loading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","subscription","subscribedUsers","includes","splice","findIndex","channelId","push","actions","reducer"],"sources":["E:/react_RES/res/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    currentUser: null,\r\n    loading: false,\r\n    error: false,\r\n}\r\n\r\nexport const userSlice = createSlice ({\r\n    name:'user',\r\n    initialState,\r\n    reducers: {\r\n        loginStart : (state) => {\r\n            state.loading = true\r\n        },\r\n        loginSuccess : (state, action) => {\r\n            state.loading = false;\r\n            state.currentUser = action.payload\r\n        },\r\n        loginFailure : (state) => {\r\n            state.loading = false;\r\n            state.error = true;\r\n        },\r\n        logout: (state) => {\r\n            // return initialState\r\n            state.currentUser = null;\r\n            state.loading = false;\r\n            state.error = false;\r\n        },\r\n        subscription: (state, action) => {\r\n            if (state.currentUser.subscribedUsers.includes(action.payload)) {\r\n              state.currentUser.subscribedUsers.splice(\r\n                state.currentUser.subscribedUsers.findIndex(\r\n                  (channelId) => channelId === action.payload\r\n                ),\r\n                1\r\n              );\r\n            } else {\r\n              state.currentUser.subscribedUsers.push(action.payload);\r\n            }\r\n          },\r\n    }\r\n})\r\n\r\nexport const {loginStart, loginFailure, loginSuccess, logout, subscription} = userSlice.actions\r\n\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAE;EAClCM,IAAI,EAAC,MAAM;EACXL,YAAY;EACZM,QAAQ,EAAE;IACNC,UAAU,EAAIC,KAAK,IAAK;MACpBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IACDO,YAAY,EAAGA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,YAAY,EAAIJ,KAAK,IAAK;MACtBA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC;IACDU,MAAM,EAAGL,KAAK,IAAK;MACf;MACAA,KAAK,CAACP,WAAW,GAAG,IAAI;MACxBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,KAAK;IACvB,CAAC;IACDW,YAAY,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC7B,IAAIF,KAAK,CAACP,WAAW,CAACc,eAAe,CAACC,QAAQ,CAACN,MAAM,CAACC,OAAO,CAAC,EAAE;QAC9DH,KAAK,CAACP,WAAW,CAACc,eAAe,CAACE,MAAM,CACtCT,KAAK,CAACP,WAAW,CAACc,eAAe,CAACG,SAAS,CACxCC,SAAS,IAAKA,SAAS,KAAKT,MAAM,CAACC,OACtC,CAAC,EACD,CACF,CAAC;MACH,CAAC,MAAM;QACLH,KAAK,CAACP,WAAW,CAACc,eAAe,CAACK,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC;MACxD;IACF;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,UAAU;EAAEK,YAAY;EAAEH,YAAY;EAAEI,MAAM;EAAEC;AAAY,CAAC,GAAGV,SAAS,CAACiB,OAAO;AAE/F,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}